<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.8">
  <compounddef id="structSTRUCT__MULTI__UART__RX__CHANNEL" kind="struct" prot="public">
    <compoundname>STRUCT_MULTI_UART_RX_CHANNEL</compoundname>
    <includes refid="multi__uart__rx_8h" local="no">multi_uart_rx.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_1b46ea6c450e5ffa595e49929d96099d8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int STRUCT_MULTI_UART_RX_CHANNEL::uart_char_len</definition>
        <argsstring></argsstring>
        <name>uart_char_len</name>
        <briefdescription>
<para>length of the UART character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="43" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_1a6cd3efc3fa9459c6b77aa91430c1f5b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int STRUCT_MULTI_UART_RX_CHANNEL::uart_word_len</definition>
        <argsstring></argsstring>
        <name>uart_word_len</name>
        <briefdescription>
<para>number of bits in UART word e.g. </para>        </briefdescription>
        <detaileddescription>
<para>Start bit + 8 bit data + parity + 2 stop bits is a 12 bit UART word </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="44" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_14daff05251a06240da1fa3573d680eb4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int STRUCT_MULTI_UART_RX_CHANNEL::clocks_per_bit</definition>
        <argsstring></argsstring>
        <name>clocks_per_bit</name>
        <briefdescription>
<para>define baud rate in relation to max baud rate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="45" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_10f1e6d677a13c7669fbd7a9021fbc4ba" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int STRUCT_MULTI_UART_RX_CHANNEL::invert_output</definition>
        <argsstring></argsstring>
        <name>invert_output</name>
        <briefdescription>
<para>define if output is inverted (set to 1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="46" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_19a2ac15b8605197f77db5b0fa8e2b1da" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int STRUCT_MULTI_UART_RX_CHANNEL::use_sample</definition>
        <argsstring></argsstring>
        <name>use_sample</name>
        <briefdescription>
<para>sample in bit stream to use </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="47" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_14ea9c6ec4f113fafbf069dee5651366b" prot="public" static="no" mutable="no">
        <type><ref refid="multi__uart__common_8h_173324082c0fcf4aaa64b4d73190e9964" kindref="member">e_uart_config_stop_bits</ref></type>
        <definition>e_uart_config_stop_bits STRUCT_MULTI_UART_RX_CHANNEL::sb_mode</definition>
        <argsstring></argsstring>
        <name>sb_mode</name>
        <briefdescription>
<para>Stop bit configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="50" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_1b702347dbbcde2f71b1f2792e1b1e684" prot="public" static="no" mutable="no">
        <type><ref refid="multi__uart__common_8h_152ca99b1d550bc4e113c5b8f283d9257" kindref="member">e_uart_config_parity</ref></type>
        <definition>e_uart_config_parity STRUCT_MULTI_UART_RX_CHANNEL::parity_mode</definition>
        <argsstring></argsstring>
        <name>parity_mode</name>
        <briefdescription>
<para>Parity mode configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="51" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSTRUCT__MULTI__UART__RX__CHANNEL_199a5fc8882c5db877c964fefbefd0387" prot="public" static="no" mutable="no">
        <type><ref refid="multi__uart__common_8h_1458b8ab09135fdc3c3997a3f7a67ff41" kindref="member">e_uart_config_polarity</ref></type>
        <definition>e_uart_config_polarity STRUCT_MULTI_UART_RX_CHANNEL::polarity_mode</definition>
        <argsstring></argsstring>
        <name>polarity_mode</name>
        <briefdescription>
<para>Polarity mode of start/stop bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="52" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure to hold configuration information and data for the UART channel RX side - this should only be interacted with via the API and not accessed directly. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" line="41" bodyfile="/scratch/dan/OSS/sc_multi_uart/doc/.doxygen/module_multi_uart/src/rx/multi_uart_rx.h" bodystart="40" bodyend="54"/>
    <listofallmembers>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_14daff05251a06240da1fa3573d680eb4" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>clocks_per_bit</name></member>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_10f1e6d677a13c7669fbd7a9021fbc4ba" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>invert_output</name></member>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_1b702347dbbcde2f71b1f2792e1b1e684" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>parity_mode</name></member>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_199a5fc8882c5db877c964fefbefd0387" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>polarity_mode</name></member>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_14ea9c6ec4f113fafbf069dee5651366b" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>sb_mode</name></member>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_1b46ea6c450e5ffa595e49929d96099d8" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>uart_char_len</name></member>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_1a6cd3efc3fa9459c6b77aa91430c1f5b" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>uart_word_len</name></member>
      <member refid="structSTRUCT__MULTI__UART__RX__CHANNEL_19a2ac15b8605197f77db5b0fa8e2b1da" prot="public" virt="non-virtual"><scope>STRUCT_MULTI_UART_RX_CHANNEL</scope><name>use_sample</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
